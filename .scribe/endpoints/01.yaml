name: Owner
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/owner/properties
    metadata:
      groupName: Owner
      groupDescription: ''
      subgroup: 'Property management'
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      X-XSRF-TOKEN: '{YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success": true}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - X-XSRF-TOKEN
      - 518c6hfEZ3vgaD4adkV6Peb
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/owner/properties
    metadata:
      groupName: Owner
      groupDescription: ''
      subgroup: 'Property management'
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      X-XSRF-TOKEN: '{YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city_id:
        name: city_id
        description: ''
        required: true
        example: magni
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_street:
        name: address_street
        description: ''
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_postcode:
        name: address_postcode
        description: ''
        required: true
        example: vitae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: animi
      city_id: magni
      address_street: quo
      address_postcode: vitae
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"name":"My property","city_id":1,"address_street":"Street Address 1","address_postcode":"12345","owner_id":2,"updated_at":"2023-05-10T07:07:45.000000Z","created_at":"2023-05-10T07:07:45.000000Z","id":1,"city":{"id":1,"country_id":1,"name":"New York","lat":"40.7127760","long":"-74.0059740","created_at":"2023-05-10T07:07:45.000000Z","updated_at":"2023-05-10T07:07:45.000000Z","country":{"id":1,"name":"United States","lat":"37.0902400","long":"-95.7128910","created_at":"2023-05-10T07:07:45.000000Z","updated_at":"2023-05-10T07:07:45.000000Z"}}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - X-XSRF-TOKEN
      - 156aV46fg8eEvPbkdc3haDZ
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/owner/properties/{property_id}/photos'
    metadata:
      groupName: Owner
      groupDescription: ''
      subgroup: 'Property photo management'
      subgroupDescription: ''
      title: 'Add a photo to a property'
      description: '[Adds a photo to a property and returns the filename, thumbnail and position of the photo]'
      authenticated: true
      custom: []
    headers:
      X-XSRF-TOKEN: '{YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      property_id:
        name: property_id
        description: 'The ID of the property.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      property_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      photo:
        name: photo
        description: 'Must be an image. Must not be greater than 5000 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      photo: null
    responses:
      -
        status: 200
        content: '{"filename": "http://localhost:8000/storage/properties/1/photos/1/IMG_20190601_123456.jpg", "thumbnail": "http://localhost:8000/storage/properties/1/photos/1/conversions/thumbnail.jpg", "position": 1}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The photo must be an image.","errors":{"photo":["The photo must be an image."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - X-XSRF-TOKEN
      - hgZ46ae3V518P6cbdDvEkfa
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/owner/properties/{property_id}/photos/{photo_id}/reorder/{newPosition}'
    metadata:
      groupName: Owner
      groupDescription: ''
      subgroup: 'Property photo management'
      subgroupDescription: ''
      title: 'Reorder photos of a property'
      description: '[Reorders photos of a property and returns the new position of the photo]'
      authenticated: true
      custom: []
    headers:
      X-XSRF-TOKEN: '{YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      property_id:
        name: property_id
        description: 'The ID of the property.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      photo_id:
        name: photo_id
        description: 'The ID of the photo.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      newPosition:
        name: newPosition
        description: 'The new position of the photo.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      property_id: 1
      photo_id: 17
      newPosition: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"newPosition": 2}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - X-XSRF-TOKEN
      - Vg65eaZ48khbvcDfa316EPd
    controller: null
    method: null
    route: null
    custom: []
